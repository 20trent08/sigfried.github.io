<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[D3 visualizations, Underscore mixins, etc.]]></title>
  <link href="http://sigfried.github.io/atom.xml" rel="self"/>
  <link href="http://sigfried.github.io/"/>
  <updated>2013-12-27T15:41:24-05:00</updated>
  <id>http://sigfried.github.io/</id>
  <author>
    <name><![CDATA[Sigfried Gold]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Underscore-unchained]]></title>
    <link href="http://sigfried.github.io/blog/underscore-unchained/"/>
    <updated>2013-12-27T00:09:00-05:00</updated>
    <id>http://sigfried.github.io/blog/underscore-unchained</id>
    <content type="html"><![CDATA[<p>A mixin that lets you use Underscore methods directly from objects or
classes of objects, and there&rsquo;s no need for _.chain(). Even if you
wouldn&rsquo;t use it in your code, it&rsquo;s pretty nice for debugging in the
console.</p>

<figure class='code'><figcaption><span>Unchain an array and it&#8217;s ready to go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">abbccc</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">unchain</span><span class="p">([</span><span class="s1">&#39;a&#39;</span><span class="p">,</span><span class="s1">&#39;bb&#39;</span><span class="p">,</span><span class="s1">&#39;ccc&#39;</span><span class="p">])</span> <span class="c1">// a humble array of strings</span>
</span><span class='line'><span class="nx">abbccc</span><span class="p">.</span><span class="nx">pluck</span><span class="p">(</span><span class="s1">&#39;length&#39;</span><span class="p">)</span>                   <span class="c1">// transform it into an array of numbers: [1,2,3]</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">last</span><span class="p">()</span>                            <span class="c1">// grab the last item (as a Number object)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">range</span><span class="p">()</span>                           <span class="c1">// create an array of that length</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>                             <span class="c1">// no need for unwrapping!</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>Defy the gods and bring the full power of Underscore to <strong>all</strong> your
Arrays, Objects, or whatever.  Also works with constructors of
user-defined classes. Use at your own risk.  Modifying built in types is
a seriously reckless undertaking and I totally recommend against it,
but, hey, what&rsquo;s the worst that could happen?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">_</span><span class="p">.</span><span class="nx">prometheus</span><span class="p">(</span><span class="nb">Array</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span><span class="s1">&#39;bb&#39;</span><span class="p">,</span><span class="s1">&#39;ccc&#39;</span><span class="p">].</span><span class="nx">pluck</span><span class="p">(</span><span class="s1">&#39;length&#39;</span><span class="p">).</span><span class="nx">last</span><span class="p">().</span><span class="nx">range</span><span class="p">()</span>  <span class="c1">// OMG, my arrays can do anything!</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Supergroup]]></title>
    <link href="http://sigfried.github.io/blog/supergroup/"/>
    <updated>2013-12-27T00:07:00-05:00</updated>
    <id>http://sigfried.github.io/blog/supergroup</id>
    <content type="html"><![CDATA[<p>Author: <a href="http://sigfried.org">Sigfried Gold</a><br/>
License: <a href="http://sigfried.mit-license.org/">MIT</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">gradeBook</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>   <span class="p">{</span><span class="nx">firstName</span><span class="o">:</span> <span class="s1">&#39;Sigfried&#39;</span><span class="p">,</span> <span class="nx">lastName</span><span class="o">:</span> <span class="s1">&#39;Gold&#39;</span><span class="p">,</span> <span class="kr">class</span><span class="o">:</span> <span class="s1">&#39;Remedial Programming&#39;</span><span class="p">,</span> <span class="nx">grade</span><span class="o">:</span> <span class="s1">&#39;C+&#39;</span><span class="p">,</span> <span class="nx">num</span><span class="o">:</span> <span class="mf">2.2</span><span class="p">},</span>
</span><span class='line'>   <span class="p">{</span><span class="nx">firstName</span><span class="o">:</span> <span class="s1">&#39;Sigfried&#39;</span><span class="p">,</span> <span class="nx">lastName</span><span class="o">:</span> <span class="s1">&#39;Gold&#39;</span><span class="p">,</span> <span class="kr">class</span><span class="o">:</span> <span class="s1">&#39;Literary Posturing&#39;</span><span class="p">,</span> <span class="nx">grade</span><span class="o">:</span> <span class="s1">&#39;B&#39;</span><span class="p">,</span> <span class="nx">num</span><span class="o">:</span> <span class="mi">3</span><span class="p">},</span>
</span><span class='line'>   <span class="p">{</span><span class="nx">firstName</span><span class="o">:</span> <span class="s1">&#39;Sigfried&#39;</span><span class="p">,</span> <span class="nx">lastName</span><span class="o">:</span> <span class="s1">&#39;Gold&#39;</span><span class="p">,</span> <span class="kr">class</span><span class="o">:</span> <span class="s1">&#39;Documenting with Pretty Colors&#39;</span><span class="p">,</span> <span class="nx">grade</span><span class="o">:</span> <span class="s1">&#39;B-&#39;</span><span class="p">,</span> <span class="nx">num</span><span class="o">:</span> <span class="mf">2.7</span><span class="p">},</span>
</span><span class='line'>   <span class="p">{</span><span class="nx">firstName</span><span class="o">:</span> <span class="s1">&#39;Someone&#39;</span><span class="p">,</span> <span class="nx">lastName</span><span class="o">:</span> <span class="s1">&#39;Else&#39;</span><span class="p">,</span> <span class="kr">class</span><span class="o">:</span> <span class="s1">&#39;Remedial Programming&#39;</span><span class="p">,</span> <span class="nx">grade</span><span class="o">:</span> <span class="s1">&#39;A&#39;</span><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">gradesByLastName</span> <span class="o">=</span> <span class="nx">enlightenedData</span><span class="p">.</span><span class="nx">group</span><span class="p">(</span><span class="nx">gradeBook</span><span class="p">,</span> <span class="s1">&#39;lastName&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">gradesByName</span> <span class="o">=</span> <span class="nx">enlightenedData</span><span class="p">.</span><span class="nx">group</span><span class="p">(</span><span class="nx">gradeBook</span><span class="p">,</span>
</span><span class='line'>        <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">+</span> <span class="s1">&#39;, &#39;</span> <span class="o">+</span> <span class="nx">d</span><span class="p">.</span><span class="nx">firstName</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span><span class="nx">dimName</span><span class="o">:</span> <span class="s1">&#39;fullName&#39;</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">sigfried</span> <span class="o">=</span> <span class="nx">gradesByName</span><span class="p">.</span><span class="nx">lookup</span><span class="p">(</span><span class="s1">&#39;Gold, Sigfried&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">sigfried</span><span class="p">.</span><span class="nx">records</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="c1">// 3</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">sigfriedGPA</span> <span class="o">=</span> <span class="nx">sigfried</span><span class="p">.</span><span class="nx">records</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">,</span><span class="nx">rec</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">result</span><span class="o">+</span><span class="nx">rec</span><span class="p">.</span><span class="nx">num</span> <span class="p">},</span> <span class="mi">0</span><span class="p">)</span> <span class="o">/</span> <span class="nx">sigfried</span><span class="p">.</span><span class="nx">records</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'><span class="p">(</span><span class="nx">it</span> <span class="nx">does</span> <span class="nx">much</span> <span class="nx">much</span> <span class="nx">more</span><span class="p">,</span> <span class="nx">will</span> <span class="nx">explain</span> <span class="nx">below</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Treelike]]></title>
    <link href="http://sigfried.github.io/blog/treelike/"/>
    <updated>2013-12-27T00:06:00-05:00</updated>
    <id>http://sigfried.github.io/blog/treelike</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sequence-viz]]></title>
    <link href="http://sigfried.github.io/blog/sequence-viz/"/>
    <updated>2013-12-27T00:04:00-05:00</updated>
    <id>http://sigfried.github.io/blog/sequence-viz</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merki]]></title>
    <link href="http://sigfried.github.io/blog/merki/"/>
    <updated>2013-12-27T00:03:00-05:00</updated>
    <id>http://sigfried.github.io/blog/merki</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
